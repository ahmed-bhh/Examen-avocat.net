// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ExamenContext))]
    partial class ExamenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Domain.Avocat", b =>
                {
                    b.Property<int>("AvocatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvocatId"));

                    b.Property<DateTime>("DateEmbauche")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialiteFK")
                        .HasColumnType("int");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AvocatId");

                    b.HasIndex("SpecialiteFK");

                    b.ToTable("Avocat");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Client", b =>
                {
                    b.Property<int>("CIN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CIN"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CIN");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Dossier", b =>
                {
                    b.Property<DateTime>("DateDepot")
                        .HasColumnType("datetime2");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<int>("Avocat_FK")
                        .HasColumnType("int");

                    b.Property<bool>("clos")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("frais")
                        .HasColumnType("float");

                    b.HasKey("DateDepot", "Client_FK", "Avocat_FK");

                    b.HasIndex("Avocat_FK");

                    b.HasIndex("Client_FK");

                    b.ToTable("Dossier");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Specialite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSpecialite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specialite");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Avocat", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Specialite", "Specialite")
                        .WithMany("Avocats")
                        .HasForeignKey("SpecialiteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialite");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Dossier", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Avocat", "Avocat")
                        .WithMany("Dossiers")
                        .HasForeignKey("Avocat_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Domain.Client", "Client")
                        .WithMany("Dossiers")
                        .HasForeignKey("Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avocat");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Avocat", b =>
                {
                    b.Navigation("Dossiers");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Client", b =>
                {
                    b.Navigation("Dossiers");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Specialite", b =>
                {
                    b.Navigation("Avocats");
                });
#pragma warning restore 612, 618
        }
    }
}
